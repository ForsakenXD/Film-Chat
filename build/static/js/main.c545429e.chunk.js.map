{"version":3,"sources":["Components/MovieRow.js","Components/Header.js","Components/popular-movies.js","Components/random-genre.js","chat/components/Message.js","chat/components/MessageList.js","chat/components/SendMessageForm.js","chat/components/RoomList.js","chat/components/NewRoomForm.js","chat/components/username.js","chat/chat-App.js","App.js","serviceWorker.js","index.js"],"names":["MovieRow","url","this","props","movie","id","window","open","focus","name","show","roomName","_this","react_default","a","createElement","style","borderBottom","marginTop","className","key","alt","concat","title","width","src","poster_path","size","overview","Button","variant","onClick","viewMovie","bind","chat","React","Component","NavigationBar","Navbar","bg","expand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","Form","inline","FormControl","type","placeholder","console","log","gradient","background","backgroundColor","PopularMovies","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","fetch","then","response","json","data","_this2","background_poster","counter","results","forEach","url2","url1","mov","original_title","fontSize","marginRight","borderColor","release_date","vote_average","push","setState","PopularRow","RandomGenre","random_genre","assertThisInitialized","genre_movies","Random_number","Math","floor","random","genres","length","rand_gen","movie_id","genre","genre_url","marginBottom","Message","username","text","MessageList","node","ReactDOM","findDOMNode","scrollTop","scrollHeight","shouldScrollToBottom","messages","map","message","index","components_Message","senderId","roomId","textAlign","renderUserMessage","SendMessageForm","handleChange","handleSubmit","e","target","value","preventDefault","sendMessage","onSubmit","disabled","onChange","RoomList","orderedRooms","toConsumableArray","rooms","sort","b","room","active","subscribeToRoom","NewRoomForm","createRoom","required","Username","handleClick","_ref","s","show2","handleShow","handleClose","randomUsername","usernameUpdate","i","rand_num","String","fromCharCode","join","lib_rodal_default","visible","onClose","height","measure","animation","Overlay","placement","container","containerPadding","Popover","Label","Control","Text","ChatApp","updateText1","joinableRooms","joinedRooms","usersWhoAreTyping","getRooms","onUsernameSubmitted","method","headers","Content-type","body","JSON","stringify","currentUsername","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","connect","currentUser","catch","err","error","nextProps","_this3","getJoinableRooms","_this4","hooks","onMessage","_this5","components_RoomList","components_MessageList","components_SendMessageForm","components_NewRoomForm","components_username","Sidebar","posed","ul","x","delayChildren","staggerChildren","closed","delay","App","toggle","isOpen","temp","trigger","director","performSearch","image","setTimeout","searchTerm","movieRows","movieRow","Components_MovieRow","rows","event","items","Header","pose","modules","activeClass","to","spy","smooth","offset","duration","popular_movies","Components_random_genre","searchChangeHandler","hide","chat_App","handler","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c545429e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass MovieRow extends React.Component {\r\n\r\n    viewMovie(){\r\n      const url = \"https://www.themoviedb.org/movie/\" + this.props.movie.id\r\n      const win = window.open(url,'_blank')\r\n      win.focus();\r\n    }\r\n    chat(name){\r\n      this.props.show(true)\r\n      this.props.roomName(name)\r\n    }\r\n\r\n\r\n//https://api.themoviedb.org/3/movie/245891/credits?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900\r\n//https://api.themoviedb.org/3/credit/245891?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900\r\n    render(){\r\n\r\n      return(\r\n          <div style={{borderBottom:'2px solid #2c3440',marginTop:'2em'}}>\r\n          <div className=\"grid-container\" key={this.props.movie.id} >\r\n          <img alt={`${this.props.movie.title}`} width='120' src={\"https://image.tmdb.org/t/p/w185\" + this.props.movie.poster_path} className=\"img-search\"/>\r\n            <div className=\"item-2 \" >\r\n              <h4 className=\"item\">{this.props.movie.title}</h4>\r\n              <p className=\"item\" size=\"sm\">{this.props.movie.overview}</p>\r\n\r\n\r\n              <Button variant=\"light\" onClick={this.viewMovie.bind(this)} className=\"button-search1\"><span>View</span></Button>\r\n              <Button variant=\"danger\" onClick={() => {this.chat(this.props.movie.title)}} className=\"button-search2\"><span>Chat with a random fan about this movie!</span></Button>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          </div>\r\n\r\n          )\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default MovieRow\r\n","import React from 'react'\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap'\r\n\r\nfunction NavigationBar(){\r\n  return(\r\n    <div className = \"flex\">\r\n    <Navbar bg=\"\" expand=\"lg\"  id=\"navbar\" className=\"lg \" >\r\n      <img href=\"#home\" alt=\"logo\" src=\"logo2.png\"></img>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto \">\r\n      <Nav.Link href=\"#link\">Movies</Nav.Link>\r\n      <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Project's github</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Developmental difficulties/project blog</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Talking about film chat's potential</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">About me</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Form inline className=\"\">\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"\" className=\"nav-search\" onClick={() => console.log('1')}>Search for a movie</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n</div>)\r\n}\r\n\r\nexport default NavigationBar\r\n","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst gradient = {\r\n  //background:'linear-gradient(180deg, rgba(2,0,36,0) 0%, rgba(249,249,255,0) 0%, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 20%, rgba(255,255,255,0) 77%, rgba(51,255,222,0.3) 94%)'\r\n  background:'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(51,255,222,0.3) 100%)',\r\n  backgroundColor:\"transparent\"\r\n  //background: 'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(153,0,0,0.5) 100%)'\r\n}\r\n\r\nclass PopularMovies extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state={}\r\n    this.show()\r\n  }\r\n\r\n  chat(name){\r\n    this.props.show(true)\r\n    this.props.roomName(name)\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  show(){\r\n    const urlString = \"https://api.themoviedb.org/3/movie/popular?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US&page=1\"\r\n    fetch(urlString)\r\n      .then(function(response) {return response.json(); })\r\n      .then(function(data){\r\n        const background_poster = []\r\n        let counter = 1\r\n        data.results.forEach((movie) => {\r\n          if(counter<=14) //(how many movies will be show on the popular movies list)\r\n          {\r\n            if(movie.poster_path !== null)\r\n            {\r\n              const url2 = \"https://image.tmdb.org/t/p/w200/\" + movie.poster_path\r\n              const url1 = \"https://www.themoviedb.org/movie/\" + movie.id\r\n              const mov = <figure className=\"imghvr-blur\" style={{backgroundColor: 'transparent'}} key={movie.original_title}>\r\n                              <img alt={(movie.original_title)} src={url2}   key={(movie.original_title)} className=\"poster\"/>\r\n                              <figcaption style={gradient}>\r\n                                <h3 className=\"ih-fade-down ih-delay-sm\" style={{fontSize:'25px'}}>{movie.original_title}</h3>\r\n                                    <div className=\"d-flex flex-row\" >\r\n                                    <Button onClick={()=> window.open(url1, \"_blank\")} variant=\"danger sm\" style={{marginRight:'1em',backgroundColor:'crimson',borderColor:'crimson'}}>View</Button>\r\n                                    <Button onClick={() =>  this.chat(movie.original_title)} variant=\"success\"   style={{backgroundColor:'black',borderColor:'black'}}>Chat!</Button>\r\n                                    </div>\r\n                                    <h6>Release Date:{movie.release_date}</h6>\r\n                                    <h6>Rating:{movie.vote_average}/10</h6>\r\n                              </figcaption>\r\n                          </figure>\r\n              background_poster.push(mov)\r\n              counter++\r\n            }\r\n         }\r\n        })\r\n        this.setState({PopularRow:background_poster})\r\n      }.bind(this))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1 className=\"popular-movies-text\">Popular Movies Today</h1>\r\n        {this.state.PopularRow}\r\n    </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default PopularMovies\r\n","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\nconst gradient = {\r\n  //background:'linear-gradient(180deg, rgba(2,0,36,0) 0%, rgba(249,249,255,0) 0%, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 20%, rgba(255,255,255,0) 77%, rgba(51,255,222,0.3) 94%)'\r\n  background:'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(153,0,0,0.5) 100%)',\r\n  backgroundColor:\"transparent\"\r\n  //background: 'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(153,0,0,0.5) 100%)'\r\n}\r\n\r\nclass RandomGenre extends React.Component{\r\n    constructor(){\r\n      super()\r\n      this.state = {}\r\n\r\n      this.random_genre = this.random_genre.bind(this)\r\n      this.genre_movies = this.genre_movies.bind(this)\r\n\r\n      this.random_genre()\r\n\r\n    }\r\n    chat(name){\r\n        this.props.show(true)\r\n        this.props.roomName(name)\r\n\r\n\r\n\r\n      }\r\n\r\n    random_genre(){\r\n      const url = \"https://api.themoviedb.org/3/genre/movie/list?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US\"\r\n      fetch(url)\r\n        .then(function(response) {return response.json(); })\r\n        .then(function(data) {\r\n          const Random_number = Math.floor((Math.random() * data.genres.length))\r\n          const rand_gen = data.genres[Random_number]\r\n          const name = <span>{rand_gen.name}</span>\r\n          const movie_id = rand_gen.id\r\n          this.setState(({genre:name,id:movie_id}))\r\n          this.genre_movies()\r\n        }.bind(this))\r\n    }\r\n\r\n    genre_movies(){\r\n      const genre_url = \"https://api.themoviedb.org/3/discover/movie?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=\" + this.state.id\r\n      fetch(genre_url)\r\n        .then(function(response) {return response.json(); })\r\n        .then(function(data) {\r\n                const background_poster = []\r\n                let counter=1;\r\n          data.results.forEach((movie) => {\r\n            if(counter<=7)\r\n            {\r\n            if(movie.poster_path !== null) //ensures that the movie image fetched from the database isn't null\r\n            {\r\n              const url2 = \"https://image.tmdb.org/t/p/w200/\" + movie.poster_path\r\n              const url1 = \"https://www.themoviedb.org/movie/\" + movie.id\r\n              const mov = <figure className=\"imghvr-blur\" style={{backgroundColor: 'transparent'}} key={movie.original_title}>\r\n                              <img alt={(movie.original_title)} src={url2}   key={(movie.original_title)} className=\"poster\"/>\r\n                              <figcaption style={gradient}>\r\n                                <h3 className=\"ih-fade-down ih-delay-sm\" style={{fontSize:'25px'}}>{movie.original_title}</h3>\r\n                                    <div className=\"d-flex flex-row\" >\r\n                                    <Button onClick={()=> window.open(url1, \"_blank\")} variant=\"danger sm\" style={{marginRight:'1em',backgroundColor:'crimson',borderColor:'crimson'}}>View</Button>\r\n                                    <Button onClick={() =>  this.chat(movie.original_title)}variant=\"success\"   style={{backgroundColor:'black',borderColor:'black'}}>Chat!</Button>\r\n                                    </div>\r\n                                    <h6>Release Date:{movie.release_date}</h6>\r\n                                    <h6>Rating:{movie.vote_average}/10</h6>\r\n                              </figcaption>\r\n                          </figure>\r\n              background_poster.push(mov)\r\n              counter++;\r\n          }\r\n          }\r\n          })\r\n          this.setState({PopularRow:background_poster})\r\n        }.bind(this))\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n\r\n\r\n      return(\r\n\r\n        <div style={{marginTop:'3em',marginBottom:'8em'}}>\r\n          <h1 className=\"popular-movies-text\">Random genre we think you should explore:{this.state.genre}</h1>\r\n          {this.state.PopularRow}\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default RandomGenre\r\n","import React from 'react'\n\nfunction Message(props) {\n    return (\n        <div className=\"message\">\n            <div className=\"message-username\">{props.username}</div>\n            <div className=\"message-text\">{props.text}</div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Message from './Message'\n\nclass MessageList extends React.Component {\n\n    componentWillUpdate(){\n      const node = ReactDOM.findDOMNode(this)\n      node.scrollTop = node.scrollHeight\n    }\n\n    componentDidUpdate(){\n      if(this.shouldScrollToBottom){\n        const node = ReactDOM.findDOMNode(this)\n        node.scrollTop = node.scrollHeight\n      }\n    }\n\n    renderUserMessage(){\n      if (this.props.messages.length !== 0) {\n        return(\n        this.props.messages.map((message, index) => {\n              return (\n            <Message key={message.id} username={message.senderId} text={message.text} />\n            )\n        })\n        );\n\n      } else {\n        return (\n          <div className=\"center\">\n          <h2 >No messages.Type something and be the first one !</h2>\n          </div>\n        );\n      }\n    }\n\n\n\n    render() {\n      if(!this.props.roomId){\n          return(\n          <div className=\"message-list\">\n              <div className=\"join-room\">\n                &larr;Join a room!\n              </div>\n          </div>\n        )\n      }\n        return (\n            <div className=\"message-list\">\n                <h3 style={{textAlign:'center',borderBottom:'1px solid rgb(153, 170, 187)'}}>Username:{this.props.username}</h3>\n\n                {this.renderUserMessage()}\n\n\n\n            </div>\n        )\n    }\n}\n\nexport default MessageList\n","import React from 'react'\n\nclass SendMessageForm extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            message: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(e) {\n        this.setState({\n            message: e.target.value\n        })\n\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({\n            message: ''\n        })\n    }\n\n    render() {\n        return (\n            <form\n                onSubmit={this.handleSubmit}\n                className=\"send-message-form\">\n                <input\n                    disabled={this.props.disabled}\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                    placeholder=\"Type your message and hit ENTER\"\n                    type=\"text\" />\n            </form>\n        )\n    }\n}\n\nexport default SendMessageForm\n","import React from 'react'\n\nclass RoomList extends React.Component {\n\n    render () {\n        const orderedRooms = [...this.props.rooms].sort((a,b) => a.id - b.id)\n        return (\n            <div className=\"rooms-list\">\n                <ul>\n                <h3>Popular Rooms</h3>\n                    {orderedRooms.map(room => {\n                        const active = this.props.roomId === room.id ? \"active\" : \"\";\n                        return (\n                            <li key={room.id} className={\"room\" + active}>\n                                <a\n                                    onClick={() => this.props.subscribeToRoom(room.id)}\n                                    href=\"#black\">\n                                    # {room.name}\n                                </a>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default RoomList\n","import React from 'react'\n\nclass NewRoomForm extends React.Component {\n    constructor(){\n      super()\n      this.state={\n        roomName:''\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n\n\n    }\n    handleChange(e){\n      this.setState({\n        roomName:e.target.value\n      })\n      // this.props.createRoom('x3')\n    }\n\n    handleSubmit(e){\n      e.preventDefault()\n      this.props.createRoom(this.state.roomName)\n      this.setState({roomName: ''})\n    }\n\n    render () {\n\n        return (\n\n            <div className=\"new-room-form\">\n\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        value={this.state.roomName}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        placeholder=\"Create a new room!\"\n                        required />\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default NewRoomForm\n","import React from 'react'\r\nimport {Button,Form,Overlay,Popover} from 'react-bootstrap'\r\nimport 'rodal/lib/rodal.css';\r\nimport Rodal from 'rodal';\r\n\r\nclass Username extends React.Component {\r\n    constructor(){\r\n      super()\r\n\r\n      this.handleClick = ({ target }) => {\r\n        this.setState(s => ({ target, show2: !s.show2 }));\r\n      };\r\n\r\n      this.state={\r\n        username:'',\r\n        show:false,\r\n        show2:false,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleSubmit = this.handleSubmit.bind(this)\r\n      this.handleShow = this.handleShow.bind(this);\r\n      this.handleClose = this.handleClose.bind(this);\r\n      this.randomUsername = this.randomUsername.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleClose() {\r\n  this.setState({ show: false });\r\n}\r\n\r\nhandleShow() {\r\n  this.setState({ show: true });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    handleChange(e){\r\n      this.setState({\r\n        username:e.target.value\r\n      })\r\n      // this.props.createRoom('x3')\r\n    }\r\n\r\n    handleSubmit(e){\r\n      e.preventDefault()\r\n      if(this.state.username !== '')\r\n        {\r\n\r\n          console.log(this.state.username)\r\n                this.props.usernameUpdate(this.state.username)\r\n          this.props.onSubmit(this.state.username)\r\n\r\n                this.setState({username:''})\r\n          this.handleClose()\r\n        }\r\n      else {\r\n        console.log('you need to enter a username')\r\n      }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.handleShow()\r\n    }\r\n\r\n    random(){\r\n      let username = []\r\n      for(let i=0; i < 12; i++)\r\n          {\r\n          let rand_num = Math.floor(Math.random() * 38)\r\n          if(rand_num <= 26) //if the random number is from 0-26 that means that the character pushed to the array will be a letter(since the alphabet has 26 letters,else it will be a number)\r\n            username.push(String.fromCharCode(97 + rand_num))\r\n          else\r\n            username.push(rand_num)\r\n          }\r\n      return username.join(\"\")\r\n\r\n\r\n    }\r\n\r\nrandomUsername(){\r\n  this.setState({username:this.random()})\r\n\r\n}\r\n\r\n    render () {\r\n        return (\r\n          <div >\r\n          <Rodal className=\"modall\" visible={this.state.show}   onClose={this.handleClick} width={40} height={40} measure={'%'} animation={'zoom'}>\r\n            <Overlay\r\n              show={this.state.show2}\r\n              target={this.state.target}\r\n              placement=\"top\"\r\n              container={this}\r\n              containerPadding={20}\r\n            >\r\n              <Popover id=\"popover-contained\" title=\"Hey There\">\r\n                <strong>Unfortunatly you have to enter a username before closing this window</strong>\r\n              </Popover>\r\n            </Overlay>\r\n          <Form onSubmit={this.handleSubmit} style={{width: '80%'}}>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={this.handleChange} value={this.state.username}/>\r\n              <Form.Text className=\"text-muted\" >\r\n                keep it simple :)\r\n              </Form.Text>\r\n          </Form>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"username-buttons\" onClick={this.handleSubmit} style={{marginRight:'0.5em'}}>\r\n            Submit\r\n          </Button>\r\n          <Button variant=\"info\" type=\"submit\"  className=\"username-buttons\" onClick={this.randomUsername}>\r\n            Random\r\n          </Button>\r\n        </Rodal>\r\n\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Username\r\n","import React from 'react'\nimport Chatkit from '@pusher/chatkit-client'\n\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport NewRoomForm from './components/NewRoomForm'\nimport Username from './components/username.js'\n\n\n\n\n\nimport 'rodal/lib/rodal.css';\n\nclass ChatApp extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: [],\n            state: true,\n            show:false,\n            usersWhoAreTyping:[]\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n        this.createRoom = this.createRoom.bind(this)\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n\n    }\n    updateText1 = (username) => {this.setState({ username })}\n\n\n\n    onUsernameSubmitted(username) {\n      fetch('http://localhost:3001/users',{\n        method:'POST',\n        headers:{\n          'Content-type':'application/json'\n        },\n        body:JSON.stringify({username})\n      })\n        .then(response => {\n          this.setState({\n            currentUsername: username\n          })\n          const chatManager = new Chatkit.ChatManager({\n              instanceLocator: 'v1:us1:8e5347bd-63e5-479a-b75c-ccb9da6fbf49',\n              userId:username,\n              tokenProvider: new Chatkit.TokenProvider({\n                  url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/8e5347bd-63e5-479a-b75c-ccb9da6fbf49/token'\n              })\n\n          })\n          chatManager.connect()\n          .then(currentUser => {\n              this.currentUser = currentUser\n\n\n              this.getRooms()\n\n\n          })\n\n\n          .catch(err => console.log('error on connecting: ', err))\n\n        console.log('success')\n      })\n        .catch(error => {\n        console.log(error)\n      })\n\n    }\n\n    handleClose() {\n  this.setState({ show: false });\n}\n\nhandleShow() {\n  this.setState({ show: true });\n}\n\n\n\n    // when a user clikcs to chat for a certain movie this component lifecycle method gets called\n     componentWillReceiveProps(nextProps){\n        this.setState({roomName:nextProps.roomName})\n\n        if( (typeof this.state.currentUsername !== 'undefined' ))\n          this.createRoom(nextProps.roomName)\n\n    }\n\n\n\n\n    getRooms() {\n        this.currentUser.getJoinableRooms()\n        .then(joinableRooms => {\n\n            this.setState({\n                joinableRooms,\n                joinedRooms: this.currentUser.rooms\n            })\n        })\n        .catch(err => console.log('error on joinableRooms: ', err))\n    }\n\n    subscribeToRoom(roomId) {\n        this.setState({messages:[]})\n        this.setState({ messages: [] })\n        console.log(roomId)\n        this.currentUser.subscribeToRoom({\n            roomId: roomId,\n            hooks: {\n                onMessage: message => {\n                    this.setState({\n                        messages: [...this.state.messages, message],\n                    })\n                },\n\n            },\n        })\n        .then(room => {\n            this.setState({\n                roomId: room.id\n            })\n            this.getRooms()\n        })\n        .catch(err => console.log('error on subscribing to room: ', err))\n    }\n\n    sendMessage(text) {\n        this.currentUser.sendMessage({\n            text,\n            roomId: this.state.roomId\n        })\n    }\n\n     createRoom(name){\n\n            console.log(this.state.currentUsername)\n            let index = false\n            let id = ''\n            this.state.joinableRooms.forEach((movie) => {\n            if(name === movie.name)\n              {\n              index = true\n              id = movie.id\n              }\n          })\n          this.state.joinedRooms.forEach((movie) => {\n          if(name === movie.name)\n            {\n            index = true\n            id = movie.id\n            }\n        })\n          if(typeof name !== 'undefined')\n          {\n          if(!index)\n            {//ensures there isn't a chatroom for the same movie\n            this.currentUser.createRoom({\n              name\n            })\n            .then(room => this.subscribeToRoom(room.id))\n            .catch(err => console.log('error with create room'))\n            }\n          else      //if there is just join it\n            this.subscribeToRoom(id)\n          }\n        }\n\n\n\n\n    render() {\n\n        return (\n            <div className=\"app\">\n                <RoomList\n                    roomId={this.state.roomId}\n                    subscribeToRoom={this.subscribeToRoom}\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n                <MessageList\n                roomId={this.state.roomId}\n                messages={this.state.messages}\n                username={this.state.currentUsername}\n                />\n                <SendMessageForm\n                disabled={!this.state.roomId}\n                sendMessage={this.sendMessage}\n                />\n              <NewRoomForm createRoom={this.createRoom}/>\n                <Username onSubmit={this.onUsernameSubmitted} usernameUpdate={this.updateText1}/>\n            </div>\n        );\n    }\n}\n\nexport default ChatApp\n","import React,{ Component } from 'react';\nimport './App.css';\nimport './imagehover.min.css'\nimport MovieRow from './Components/MovieRow.js'\nimport NavigationBar from './Components/Header.js'\nimport PopularMovies from './Components/popular-movies.js'\nimport RandomGenre from './Components/random-genre.js'\nimport ChatApp from './chat/chat-App.js'\nimport {Button} from 'react-bootstrap'\nimport { Link } from \"react-scroll\";\nimport posed from 'react-pose';\nimport Rodal from 'rodal';\n\nimport 'rodal/lib/rodal.css';\n\n\n//  ANIMATION CONSTANTS\nconst Sidebar = posed.ul({\n  open: {\n    x: '0%',\n    delayChildren: 200,\n    staggerChildren: 150\n  },\n  closed: { x: '-100%', delay: 300 }\n});\n// enter exit transition constants//\n\n// enter exit transition constants//\n//  ANIMATION CONSTANTS\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {isOpen: false,visible:false,trigger:false,director:''}\n    this.updateText1 = this.updateText1\n    this.performSearch = this.performSearch.bind(this)\n    this.image = this.image.bind(this)\n    this.image()\n    this.performSearch(\"John Wick\")\n  }\n  // BUTTONS ANIMATION\n  componentDidMount() {\n      setTimeout(this.toggle, 350);\n\n    }\nroom = (roomName) => {this.setState({roomName})}\n\n\n\n  toggle = () => this.setState({ isOpen: !this.state.isOpen });\n  //BUTTONS ANIMATION\n\n\n  updateText1 = (visible) => {this.setState({ visible })}\n\n  temp = () => {this.setState({trigger:true})}\n\n\n\n  show() {\n\n     this.setState({ visible: true });\n\n\n }\n\n hide() {\n\n     this.setState({ visible: false});\n }\n\n\n\n  performSearch(searchTerm){\n    const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US&page=1&include_adult=false&query=\" + searchTerm\n\n\n    fetch(urlString)\n      .then(function(response) {return response.json(); })\n      .then(function(data){\n        let results = data.results\n        var movieRows = []\n        results.forEach((movie) => {\n          //console.log(movie)\n          if(movie.poster_path !== null)\n          {\n            const movieRow = <MovieRow key={movie.id} movie={movie} show={this.updateText1} visible={this.state.visible} roomName={this.room} />\n            movieRows.push(movieRow)\n          }\n        })\n        this.setState({rows:movieRows})\n      }.bind(this))\n  }\n\n\n\n\n\nsearchChangeHandler(event){\n  const boundObject = this\n  const searchTerm = event.target.value\n  if(event.target.value !== '')\n    boundObject.performSearch(searchTerm)\n}\n\n\n// future image and title changing function //\nimage(){\n  const urlString = \"https://api.themoviedb.org/3/list/111790?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US\"\n  fetch(urlString)\n    .then(function(response) {return response.json(); })\n    .then(function(data){\n      const background_poster = []\n      data.items.forEach((movie) => {background_poster.push(movie.original_title)})\n      this.setState({background:background_poster[0]})\n    }.bind(this))\n}\n// future image and title changing function //\n\n\n\n  render(){\n    const { isOpen } = this.state;\n  return (\n    <div >\n      <NavigationBar />\n      <div>\n      <div className=\"noir-background\"></div>\n\n        <div className=\"noir-background-text-border\">\n          <Sidebar className=\"sidebar\" pose={isOpen ? 'open' : 'closed'}>\n            <h1 className=\"noir-background-text-header\">Filmchat</h1>\n            <p className=\"noir-background-text-paragraph\">A Website where Film-fans through out the World can privately and Anonymously Chat about their favourite movies in chatrooms created on the spot!</p>\n\n              <Link\n                  activeClass=\"active\"\n                  to=\"section1\"\n                  spy={true}\n                  smooth={true}\n                  offset={-70}\n                  duration={1500}\n                  >\n                <Button size=\"lg\" id=\"button1\" >search for a specific movie</Button>\n                </Link>\n            <Button size=\"lg\" id=\"button2\" onClick={this.show.bind(this)}>See all chatrooms</Button>\n          </Sidebar >\n          <p id=\"movie-title\">{this.state.background + '(2003)'}</p>\n          <img src=\"arrow.png\" alt=\"arrow\" width=\"50\" />\n        </div>\n\n      </div>\n      <div className=\"popular-movies\">\n      <h1 className=\"headline1\">You can either start chatting or view more information about the movies by hovering your mouse over them.Time to get social!!</h1>\n        <PopularMovies show={this.updateText1}  roomName={this.room}/>\n        <RandomGenre show={this.updateText1} roomName={this.room}/>\n        <h1 className=\"headline1\">Search for your favourite movie and chat with others down bellow!</h1>\n        <div className=\"search-background search__container\" id=\"section1\">\n            <div>\n            <input className=\"searchBar search__input\" placeholder=\"Search for a movie!\" onChange={this.searchChangeHandler.bind(this)}/>\n            { /*\n            <Button variant=\"primary\" type=\"submit\"  id=\"sort_button\">\n              Sort\n            </Button>\n            */\n            }\n            </div>\n            {this.state.rows}\n        </div>\n      </div>\n\n\n                 <Rodal className=\"modall\" visible={this.state.visible} onClose={this.hide.bind(this)} width={80} height={80} measure={'%'} animation={'zoom'}>\n                     <ChatApp roomName={this.state.roomName} id={'nikos'} handler={this.temp}/>\n                 </Rodal>\n\n\n\n    </div>\n  );\n}}\n\n\n//      <input className=\"searchBar\" placeholder=\"Enter Search Term\" onChange={this.searchChangeHandler.bind(this)}/>\n//       {this.state.rows}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}