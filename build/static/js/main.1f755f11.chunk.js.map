{"version":3,"sources":["Components/MovieRow.js","Components/Header.js","Components/popular-movies.js","Components/random-genre.js","chat/components/Message.js","chat/components/MessageList.js","chat/components/SendMessageForm.js","chat/components/RoomList.js","chat/components/NewRoomForm.js","chat/chat-App.js","chat/config.js","App.js","serviceWorker.js","index.js"],"names":["MovieRow","url","this","props","movie","id","window","open","focus","name","show","roomName","_this","react_default","a","createElement","style","borderBottom","marginTop","className","key","alt","concat","title","width","src","poster_path","overview","Button","variant","onClick","viewMovie","bind","chat","React","Component","NavigationBar","Navbar","bg","expand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","Form","inline","FormControl","type","placeholder","gradient","background","PopularMovies","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","fetch","then","response","json","data","_this2","background_poster","counter","results","forEach","url2","url1","mov","backgroundColor","original_title","fontSize","marginRight","borderColor","release_date","vote_average","push","setState","PopularRow","RandomGenre","random_genre","assertThisInitialized","genre_movies","Random_number","Math","floor","random","genres","length","rand_gen","movie_id","genre","genre_url","marginBottom","Message","username","text","MessageList","node","ReactDOM","findDOMNode","scrollTop","scrollHeight","shouldScrollToBottom","console","log","roomId","messages","map","message","index","components_Message","senderId","SendMessageForm","handleChange","handleSubmit","e","target","value","preventDefault","sendMessage","onSubmit","disabled","onChange","RoomList","orderedRooms","toConsumableArray","rooms","sort","b","room","active","subscribeToRoom","NewRoomForm","createRoom","required","ChatApp","joinableRooms","joinedRooms","getRooms","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","connect","currentUser","catch","err","nextProps","_this3","getJoinableRooms","_this4","hooks","onMessage","_this5","components_RoomList","components_MessageList","components_SendMessageForm","components_NewRoomForm","Sidebar","posed","ul","x","delayChildren","staggerChildren","closed","delay","App","toggle","isOpen","updateText1","visible","performSearch","image","setTimeout","searchTerm","movieRows","movieRow","Components_MovieRow","rows","event","items","Header","pose","modules","activeClass","to","spy","smooth","offset","duration","size","popular_movies","Components_random_genre","searchChangeHandler","rodal_default","onClose","hide","height","measure","animation","chat_App","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f755f11.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass MovieRow extends React.Component {\r\n\r\n\r\n\r\n    viewMovie(){\r\n      const url = \"https://www.themoviedb.org/movie/\" + this.props.movie.id\r\n      const win = window.open(url,'_blank')\r\n      win.focus();\r\n    }\r\n    chat(name){\r\n      this.props.show(true)\r\n      this.props.roomName(name)\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n      return(\r\n          <div style={{borderBottom:'2px solid #2c3440',marginTop:'2em'}}>\r\n          <div className=\"grid-container\" key={this.props.movie.id} >\r\n          <img alt={`${this.props.movie.title}`} width='120' src={\"https://image.tmdb.org/t/p/w185\" + this.props.movie.poster_path} className=\"img-search\"/>\r\n            <div className=\"item-2 \" >\r\n              <h4 className=\"item\">{this.props.movie.title}</h4>\r\n              <p className=\"item\">{this.props.movie.overview}</p>\r\n              <Button variant=\"light\" onClick={this.viewMovie.bind(this)} className=\"button-search1\"><span>View</span></Button>\r\n              <Button variant=\"danger\" onClick={() => {this.chat(this.props.movie.title)}} className=\"button-search2\"><span>Chat with a random fan about this movie!</span></Button>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          </div>\r\n\r\n          )\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default MovieRow\r\n","import React from 'react'\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap'\r\n\r\nfunction NavigationBar(){\r\n  return(\r\n    <div className = \"flex\">\r\n    <Navbar bg=\"\" expand=\"lg\"  id=\"navbar\" className=\"lg \" >\r\n      <img href=\"#home\" alt=\"logo\" src=\"logo.png\"></img>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto \">\r\n      <Nav.Link className=\"intro\" href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#link\">Movies</Nav.Link>\r\n      <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Form inline className=\"\">\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"\" className=\"nav-search\">Search for a movie</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n</div>)\r\n}\r\n\r\nexport default NavigationBar\r\n","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst gradient = {\r\n  //background:'linear-gradient(180deg, rgba(2,0,36,0) 0%, rgba(249,249,255,0) 0%, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 20%, rgba(255,255,255,0) 77%, rgba(51,255,222,0.3) 94%)'\r\n  background:'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(51,255,222,0.3) 100%)'\r\n  //background: 'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(153,0,0,0.5) 100%)'\r\n}\r\n\r\nclass PopularMovies extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state={}\r\n    this.show()\r\n  }\r\n\r\n  chat(name){\r\n    this.props.show(true)\r\n    this.props.roomName(name)\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  show(){\r\n    const urlString = \"https://api.themoviedb.org/3/movie/popular?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US&page=1\"\r\n    fetch(urlString)\r\n      .then(function(response) {return response.json(); })\r\n      .then(function(data){\r\n        const background_poster = []\r\n        let counter = 1\r\n        data.results.forEach((movie) => {\r\n          if(counter<=14) //(how many movies will be show on the popular movies list)\r\n          {\r\n            if(movie.poster_path !== null)\r\n            {\r\n              const url2 = \"https://image.tmdb.org/t/p/w200/\" + movie.poster_path\r\n              const url1 = \"https://www.themoviedb.org/movie/\" + movie.id\r\n              const mov = <figure className=\"imghvr-blur\" style={{backgroundColor: 'transparent'}} key={movie.original_title}>\r\n                              <img alt={(movie.original_title)} src={url2}   key={(movie.original_title)} className=\"poster\"/>\r\n                              <figcaption style={{backgroundColor:\"transparent\"},gradient}>\r\n                                <h3 className=\"ih-fade-down ih-delay-sm\" style={{fontSize:'25px'}}>{movie.original_title}</h3>\r\n                                    <div className=\"d-flex flex-row\" >\r\n                                    <Button onClick={()=> window.open(url1, \"_blank\")} variant=\"danger sm\" style={{marginRight:'1em',backgroundColor:'crimson',borderColor:'crimson'}}>View</Button>\r\n                                    <Button onClick={() =>  this.chat(movie.original_title)} variant=\"success\"   style={{backgroundColor:'black',borderColor:'black'}}>Chat!</Button>\r\n                                    </div>\r\n                                    <h6>Release Date:{movie.release_date}</h6>\r\n                                    <h6>Rating:{movie.vote_average}/10</h6>\r\n                              </figcaption>\r\n                          </figure>\r\n              background_poster.push(mov)\r\n              counter++\r\n            }\r\n         }\r\n        })\r\n        this.setState({PopularRow:background_poster})\r\n      }.bind(this))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1 className=\"popular-movies-text\">Popular Movies Today</h1>\r\n        {this.state.PopularRow}\r\n    </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default PopularMovies\r\n","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\nconst gradient = {\r\n  //background:'linear-gradient(180deg, rgba(2,0,36,0) 0%, rgba(249,249,255,0) 0%, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 20%, rgba(255,255,255,0) 77%, rgba(51,255,222,0.3) 94%)'\r\n  background:'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(153,0,0,0.5) 100%)'\r\n  //background: 'linear-gradient(180deg, rgba(255,255,255,0) 37%, rgba(153,0,0,0.5) 100%)'\r\n}\r\n\r\nclass RandomGenre extends React.Component{\r\n    constructor(){\r\n      super()\r\n      this.state = {}\r\n\r\n      this.random_genre = this.random_genre.bind(this)\r\n      this.genre_movies = this.genre_movies.bind(this)\r\n\r\n      this.random_genre()\r\n\r\n    }\r\n    chat(name){\r\n        this.props.show(true)\r\n        this.props.roomName(name)\r\n\r\n\r\n\r\n      }\r\n\r\n    random_genre(){\r\n      const url = \"https://api.themoviedb.org/3/genre/movie/list?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US\"\r\n      fetch(url)\r\n        .then(function(response) {return response.json(); })\r\n        .then(function(data) {\r\n          const Random_number = Math.floor((Math.random() * data.genres.length))\r\n          const rand_gen = data.genres[Random_number]\r\n          const name = <span>{rand_gen.name}</span>\r\n          const movie_id = rand_gen.id\r\n          this.setState(({genre:name,id:movie_id}))\r\n          this.genre_movies()\r\n        }.bind(this))\r\n    }\r\n\r\n    genre_movies(){\r\n      const genre_url = \"https://api.themoviedb.org/3/discover/movie?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=\" + this.state.id\r\n      fetch(genre_url)\r\n        .then(function(response) {return response.json(); })\r\n        .then(function(data) {\r\n                const background_poster = []\r\n                let counter=1;\r\n          data.results.forEach((movie) => {\r\n            if(counter<=7)\r\n            {\r\n            if(movie.poster_path !== null) //ensures that the movie image fetched from the database isn't null\r\n            {\r\n              const url2 = \"https://image.tmdb.org/t/p/w200/\" + movie.poster_path\r\n              const url1 = \"https://www.themoviedb.org/movie/\" + movie.id\r\n              const mov = <figure className=\"imghvr-blur\" style={{backgroundColor: 'transparent'}} key={movie.original_title}>\r\n                              <img alt={(movie.original_title)} src={url2}   key={(movie.original_title)} className=\"poster\"/>\r\n                              <figcaption style={{backgroundColor:\"transparent\"},gradient}>\r\n                                <h3 className=\"ih-fade-down ih-delay-sm\" style={{fontSize:'25px'}}>{movie.original_title}</h3>\r\n                                    <div className=\"d-flex flex-row\" >\r\n                                    <Button onClick={()=> window.open(url1, \"_blank\")} variant=\"danger sm\" style={{marginRight:'1em',backgroundColor:'crimson',borderColor:'crimson'}}>View</Button>\r\n                                    <Button onClick={() =>  this.chat(movie.original_title)}variant=\"success\"   style={{backgroundColor:'black',borderColor:'black'}}>Chat!</Button>\r\n                                    </div>\r\n                                    <h6>Release Date:{movie.release_date}</h6>\r\n                                    <h6>Rating:{movie.vote_average}/10</h6>\r\n                              </figcaption>\r\n                          </figure>\r\n              background_poster.push(mov)\r\n              counter++;\r\n          }\r\n          }\r\n          })\r\n          this.setState({PopularRow:background_poster})\r\n        }.bind(this))\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n\r\n\r\n      return(\r\n\r\n        <div style={{marginTop:'3em',marginBottom:'8em'}}>\r\n          <h1 className=\"popular-movies-text\">Random genre we think you should explore:{this.state.genre}</h1>\r\n          {this.state.PopularRow}\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default RandomGenre\r\n","import React from 'react'\n\nfunction Message(props) {\n    return (\n        <div className=\"message\">\n            <div className=\"message-username\">{props.username}</div>\n            <div className=\"message-text\">{props.text}</div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Message from './Message'\n\nclass MessageList extends React.Component {\n\n    componentWillUpdate(){\n      const node = ReactDOM.findDOMNode(this)\n      node.scrollTop = node.scrollHeight\n    }\n\n    componentDidUpdate(){\n      if(this.shouldScrollToBottom){\n        const node = ReactDOM.findDOMNode(this)\n        node.scrollTop = node.scrollHeight\n      }\n    }\n\n\n\n\n    render() {\n      console.log(this.props.roomId)\n      if(!this.props.roomId){\n          return(\n          <div className=\"message-list\">\n              <div className=\"join-room\">\n                &larr;Join a room!\n              </div>\n          </div>\n        )\n      }\n        return (\n            <div className=\"message-list\">\n                {this.props.messages.map((message, index) => {\n                    return (\n                        <Message key={message.id} username={message.senderId} text={message.text} />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default MessageList\n","import React from 'react'\n\nclass SendMessageForm extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            message: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(e) {\n        this.setState({\n            message: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({\n            message: ''\n        })\n    }\n\n    render() {\n        return (\n            <form\n                onSubmit={this.handleSubmit}\n                className=\"send-message-form\">\n                <input\n                    disabled={this.props.disabled}\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                    placeholder=\"Type your message and hit ENTER\"\n                    type=\"text\" />\n            </form>\n        )\n    }\n}\n\nexport default SendMessageForm\n","import React from 'react'\n\nclass RoomList extends React.Component {\n\n\n    render () {\n        const orderedRooms = [...this.props.rooms].sort((a,b) => a.id - b.id)\n        return (\n            <div className=\"rooms-list\">\n                <ul>\n                <h3>Popular Rooms</h3>\n                    {orderedRooms.map(room => {\n                        const active = this.props.roomId === room.id ? \"active\" : \"\";\n                        return (\n                            <li key={room.id} className={\"room\" + active}>\n                                <a\n                                    onClick={() => this.props.subscribeToRoom(room.id)}\n                                    href=\"#\">\n                                    # {room.name}\n                                </a>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default RoomList\n","import React from 'react'\n\nclass NewRoomForm extends React.Component {\n    constructor(){\n      super()\n      this.state={\n        roomName:''\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n\n\n    }\n    handleChange(e){\n      this.setState({\n        roomName:e.target.value\n      })\n      // this.props.createRoom('x3')\n    }\n\n    handleSubmit(e){\n      e.preventDefault()\n      this.props.createRoom(this.state.roomName)\n      this.setState({roomName: ''})\n    }\n\n    render () {\n\n        return (\n\n            <div className=\"new-room-form\">\n\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        value={this.state.roomName}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        placeholder=\"Create a new room!\"\n                        required />\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default NewRoomForm\n","import React from 'react'\nimport Chatkit from '@pusher/chatkit-client'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport NewRoomForm from './components/NewRoomForm'\n\nimport { tokenUrl, instanceLocator } from './config'\n\nclass ChatApp extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: [],\n            state: true\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n        this.createRoom = this.createRoom.bind(this)\n    }\n\n    componentDidMount() {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator,\n            userId: 'User1',\n            tokenProvider: new Chatkit.TokenProvider({\n                url: tokenUrl\n            })\n\n        })\n\n        chatManager.connect()\n        .then(currentUser => {\n            this.currentUser = currentUser\n            this.getRooms()\n        })\n        .catch(err => console.log('error on connecting: ', err))\n    }\n    // when a user clikcs to chat for a certain movie this component lifecycle method gets called\n    componentWillReceiveProps(nextProps){\n      if(nextProps.roomName!==this.props.roomName){\n          this.createRoom(nextProps.roomName)\n      }\n    }\n\n\n\n\n\n\n\n\n\n    getRooms() {\n        this.currentUser.getJoinableRooms()\n        .then(joinableRooms => {\n\n            this.setState({\n                joinableRooms,\n                joinedRooms: this.currentUser.rooms\n            })\n        })\n        .catch(err => console.log('error on joinableRooms: ', err))\n    }\n\n    subscribeToRoom(roomId) {\n        this.setState({messages:[]})\n        this.setState({ messages: [] })\n        console.log(roomId)\n        this.currentUser.subscribeToRoom({\n            roomId: roomId,\n            hooks: {\n                onMessage: message => {\n                    this.setState({\n                        messages: [...this.state.messages, message],\n                    })\n                }\n            }\n        })\n        .then(room => {\n            this.setState({\n                roomId: room.id\n            })\n            this.getRooms()\n        })\n        .catch(err => console.log('error on subscribing to room: ', err))\n    }\n\n    sendMessage(text) {\n        this.currentUser.sendMessage({\n            text,\n            roomId: this.state.roomId\n        })\n    }\n\n    createRoom(name){\n            let index = false\n            let id = ''\n            this.state.joinedRooms.forEach((movie) => {\n            if(name == movie.name)\n              {\n              index = true\n              id = movie.id\n              }\n          })\n          if(!index)  //ensures there isn't a chatroom for the same movie\n            this.currentUser.createRoom({\n              name\n            })\n            .then(room => this.subscribeToRoom(room.id))\n            .catch(err => console.log('error with create room'))\n          else      //if there is just join it\n              (room => this.subscribeToRoom(id))\n              (err => console.log('error with create room'))\n        }\n\n\n    render() {\n\n        return (\n            <div className=\"app\">\n                <RoomList\n                    roomId={this.state.roomId}\n                    subscribeToRoom={this.subscribeToRoom}\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n                <MessageList\n                roomId={this.state.roomId}\n                messages={this.state.messages} />\n                <SendMessageForm\n                disabled={!this.state.roomId}\n                sendMessage={this.sendMessage} />\n                <NewRoomForm createRoom={this.createRoom}/>\n            </div>\n        );\n    }\n}\n\nexport default ChatApp\n","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/8e5347bd-63e5-479a-b75c-ccb9da6fbf49/token\";\nconst instanceLocator = \"v1:us1:8e5347bd-63e5-479a-b75c-ccb9da6fbf49\";\n\nexport {tokenUrl,instanceLocator}\n","import React,{ Component } from 'react';\nimport './App.css';\nimport './imagehover.min.css'\nimport MovieRow from './Components/MovieRow.js'\nimport NavigationBar from './Components/Header.js'\nimport PopularMovies from './Components/popular-movies.js'\nimport RandomGenre from './Components/random-genre.js'\nimport ChatApp from './chat/chat-App.js'\nimport {Button} from 'react-bootstrap'\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport posed, { PoseGroup } from 'react-pose';\nimport Rodal from 'rodal';\n\nimport 'rodal/lib/rodal.css';\n\n\n//  ANIMATION CONSTANTS\nconst Sidebar = posed.ul({\n  open: {\n    x: '0%',\n    delayChildren: 200,\n    staggerChildren: 150\n  },\n  closed: { x: '-100%', delay: 300 }\n});\n// enter exit transition constants//\n\n// enter exit transition constants//\n//  ANIMATION CONSTANTS\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {isOpen: false,visible:false}\n    this.updateText1 = this.updateText1\n    this.performSearch = this.performSearch.bind(this)\n    this.image = this.image.bind(this)\n    this.image()\n    this.performSearch(\"John Wick\")\n  }\n  // BUTTONS ANIMATION\n  componentDidMount() {\n      setTimeout(this.toggle, 350);\n\n    }\nroom = (roomName) => {this.setState({roomName})}\n\n\n\n  toggle = () => this.setState({ isOpen: !this.state.isOpen });\n  //BUTTONS ANIMATION\n\n\n  updateText1 = (visible) => {this.setState({ visible })}\n\n\n\n  show() {\n\n     this.setState({ visible: true });\n\n\n }\n\n hide() {\n\n     this.setState({ visible: false});\n }\n\n\n\n  performSearch(searchTerm){\n    const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US&page=1&include_adult=false&query=\" + searchTerm\n\n\n    fetch(urlString)\n      .then(function(response) {return response.json(); })\n      .then(function(data){\n        let results = data.results\n        var movieRows = []\n        results.forEach((movie) => {\n          //console.log(movie)\n          if(movie.poster_path !== null)\n          {\n            const movieRow = <MovieRow key={movie.id} movie={movie} show={this.updateText1} visible={this.state.visible} roomName={this.room}/>\n            movieRows.push(movieRow)\n          }\n        })\n        this.setState({rows:movieRows})\n      }.bind(this))\n  }\n\n\nsearchChangeHandler(event){\n  const boundObject = this\n  const searchTerm = event.target.value\n  if(event.target.value !== '')\n    boundObject.performSearch(searchTerm)\n}\n\n\n// future image and title changing function //\nimage(){\n  const urlString = \"https://api.themoviedb.org/3/list/111790?api_key=1adbe5b9d80d1dc5e9cd90c2e0c31900&language=en-US\"\n  fetch(urlString)\n    .then(function(response) {return response.json(); })\n    .then(function(data){\n      const background_poster = []\n      data.items.forEach((movie) => {background_poster.push(movie.original_title)})\n      this.setState({background:background_poster[0]})\n    }.bind(this))\n}\n// future image and title changing function //\n\n\n\n  render(){\n    const { isOpen } = this.state;\n  return (\n    <div >\n      <NavigationBar />\n      <div>\n      <div className=\"noir-background\"></div>\n\n        <div className=\"noir-background-text-border\">\n          <Sidebar className=\"sidebar\" pose={isOpen ? 'open' : 'closed'}>\n            <h1 className=\"noir-background-text-header\">Filmchat</h1>\n            <p className=\"noir-background-text-paragraph\">A Website where Film-fans through out the World can privately and Anonymously Chat about their favourite movies in chatrooms created on the spot!</p>\n\n              <Link\n                  activeClass=\"active\"\n                  to=\"section1\"\n                  spy={true}\n                  smooth={true}\n                  offset={-70}\n                  duration={1500}\n                  >\n                <Button size=\"lg\" id=\"button1\" >search for a specific movie</Button>\n                </Link>\n            <Button size=\"lg\" id=\"button2\" onClick={this.show.bind(this)}>See all chatrooms</Button>\n          </Sidebar >\n          <p id=\"movie-title\">{this.state.background + '(2003)'}</p>\n          <img src=\"arrow.png\" alt=\"arrow\" width=\"50\" />\n        </div>\n\n      </div>\n      <div className=\"popular-movies\">\n      <h1 className=\"headline1\">You can either start chatting or view more information about the movies by hovering your mouse over them.Time to get social!!</h1>\n        <PopularMovies show={this.updateText1}  roomName={this.room}/>\n        <RandomGenre show={this.updateText1} roomName={this.room}/>\n        <h1 className=\"headline1\">Search for your favourite movie and chat with others down bellow!</h1>\n        <div className=\"search-background search__container\" id=\"section1\">\n          <input className=\"searchBar search__input\" placeholder=\"Search for a movie!\" onChange={this.searchChangeHandler.bind(this)}/>\n            {this.state.rows}\n        </div>\n      </div>\n\n\n                 <Rodal className=\"modall\" visible={this.state.visible} onClose={this.hide.bind(this)} width={80} height={80} measure={'%'} animation={'zoom'}>\n                     <ChatApp roomName={this.state.roomName} />\n                 </Rodal>\n    </div>\n  );\n}}\n\n\n//      <input className=\"searchBar\" placeholder=\"Enter Search Term\" onChange={this.searchChangeHandler.bind(this)}/>\n//       {this.state.rows}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}