{"ast":null,"code":"var _jsxFileName = \"E:\\\\User\\\\Desktop\\\\Film-Chat\\\\film-chat\\\\src\\\\chat\\\\components\\\\username.js\";\nimport React from 'react';\nimport { Button, Form, Overlay, Popover } from 'react-bootstrap';\nimport 'rodal/lib/rodal.css';\nimport Rodal from 'rodal';\n\nclass Username extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = ({\n      target\n    }) => {\n      this.setState(s => ({\n        target,\n        show2: !s.show2\n      }));\n    };\n\n    this.state = {\n      username: '',\n      show: false,\n      show2: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.randomUsername = this.randomUsername.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      username: e.target.value\n    }); // this.props.createRoom('x3')\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.username !== '') {\n      console.log(this.state.username);\n      this.props.usernameUpdate(this.state.username);\n      this.props.onSubmit(this.state.username);\n      this.setState({\n        username: ''\n      });\n      this.handleClose();\n    } else {\n      console.log('you need to enter a username');\n    }\n  }\n\n  componentDidMount() {\n    this.handleShow();\n  }\n\n  random() {\n    let username = [];\n\n    for (let i = 0; i < 12; i++) {\n      let choice = Math.floor(Math.random() * 38);\n      if (choice <= 26) username.push(String.fromCharCode(97 + choice));else {\n        username.push(choice);\n      }\n    }\n\n    return username.join(\"\");\n  }\n\n  randomUsername() {\n    this.setState({\n      username: this.random()\n    });\n    console.log(this.state.username);\n  }\n\n  render() {\n    const _this$state = this.state,\n          show = _this$state.show,\n          target = _this$state.target;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Rodal, {\n      className: \"modall\",\n      visible: this.state.show,\n      onClose: this.handleClick,\n      width: 40,\n      height: 40,\n      measure: '%',\n      animation: 'zoom',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Overlay, {\n      show: this.state.show2,\n      target: this.state.target,\n      placement: \"top\",\n      container: this,\n      containerPadding: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Popover, {\n      id: \"popover-contained\",\n      title: \"Hey There\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Unfortunatly you have to enter a username before closing this window\"))), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      style: {\n        width: '80%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter username\",\n      onChange: this.handleChange,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"keep it simple :)\"), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onSubmit: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      variant: \"info\",\n      type: \"submit\",\n      style: {\n        marginLeft: '0.5em'\n      },\n      onClick: this.randomUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Random\"))));\n  }\n\n}\n\nexport default Username;","map":{"version":3,"sources":["E:\\User\\Desktop\\Film-Chat\\film-chat\\src\\chat\\components\\username.js"],"names":["React","Button","Form","Overlay","Popover","Rodal","Username","Component","constructor","handleClick","target","setState","s","show2","state","username","show","handleChange","bind","handleSubmit","handleShow","handleClose","randomUsername","e","value","preventDefault","console","log","props","usernameUpdate","onSubmit","componentDidMount","random","i","choice","Math","floor","push","String","fromCharCode","join","render","width","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Button,Form,Overlay,Popover} from 'react-bootstrap'\r\nimport 'rodal/lib/rodal.css';\r\nimport Rodal from 'rodal';\r\n\r\nclass Username extends React.Component {\r\n    constructor(){\r\n      super()\r\n\r\n      this.handleClick = ({ target }) => {\r\n        this.setState(s => ({ target, show2: !s.show2 }));\r\n      };\r\n\r\n      this.state={\r\n        username:'',\r\n        show:false,\r\n        show2:false,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleSubmit = this.handleSubmit.bind(this)\r\n      this.handleShow = this.handleShow.bind(this);\r\n      this.handleClose = this.handleClose.bind(this);\r\n      this.randomUsername = this.randomUsername.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleClose() {\r\n  this.setState({ show: false });\r\n}\r\n\r\nhandleShow() {\r\n  this.setState({ show: true });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    handleChange(e){\r\n      this.setState({\r\n        username:e.target.value\r\n      })\r\n      // this.props.createRoom('x3')\r\n    }\r\n\r\n    handleSubmit(e){\r\n      e.preventDefault()\r\n      if(this.state.username !== '')\r\n        {\r\n\r\n          console.log(this.state.username)\r\n                this.props.usernameUpdate(this.state.username)\r\n          this.props.onSubmit(this.state.username)\r\n\r\n                this.setState({username:''})\r\n          this.handleClose()\r\n        }\r\n      else {\r\n        console.log('you need to enter a username')\r\n      }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.handleShow()\r\n    }\r\n\r\n    random(){\r\n      let username = []\r\n      for(let i=0; i < 12; i++)\r\n          {\r\n          let choice = Math.floor(Math.random() * 38)\r\n          if(choice <= 26)\r\n            username.push(String.fromCharCode(97 + choice))\r\n          else{\r\n            username.push(choice)\r\n          }\r\n          }\r\n      return username.join(\"\")\r\n\r\n\r\n    }\r\n\r\nrandomUsername(){\r\n  this.setState({username:this.random()})\r\n  console.log(this.state.username)\r\n\r\n}\r\n\r\n    render () {\r\n        const {show,target} = this.state;\r\n        return (\r\n          <div >\r\n          <Rodal className=\"modall\" visible={this.state.show}   onClose={this.handleClick} width={40} height={40} measure={'%'} animation={'zoom'}>\r\n            <Overlay\r\n              show={this.state.show2}\r\n              target={this.state.target}\r\n              placement=\"top\"\r\n              container={this}\r\n              containerPadding={20}\r\n            >\r\n              <Popover id=\"popover-contained\" title=\"Hey There\">\r\n                <strong>Unfortunatly you have to enter a username before closing this window</strong>\r\n              </Popover>\r\n            </Overlay>\r\n          <Form onSubmit={this.handleSubmit} style={{width: '80%'}}>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={this.handleChange} value={this.state.username}/>\r\n              <Form.Text className=\"text-muted\" >\r\n                keep it simple :)\r\n              </Form.Text>\r\n            <Button variant=\"primary\" type=\"submit\" onSubmit={this.handleClick}>\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"info\" type=\"submit\" style={{marginLeft:'0.5em'}} onClick={this.randomUsername}>\r\n              Random\r\n            </Button>\r\n          </Form>\r\n        </Rodal>\r\n\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Username\r\n"]},"metadata":{},"sourceType":"module"}